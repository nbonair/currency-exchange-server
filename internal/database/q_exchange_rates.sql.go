// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: q_exchange_rates.sql

package database

import (
	"context"
	"time"
)

const upsertExchangeRate = `-- name: UpsertExchangeRate :exec
INSERT INTO exchange_rates(base_currency_id, currency_id, exchange_rate, updated_at)
VALUES ($1, $2, $3, $4)
ON CONFLICT (base_currency_id, currency_id)
DO UPDATE SET exchange_rate = EXCLUDED.exchange_rate, updated_at = EXCLUDED.updated_at
`

type UpsertExchangeRateParams struct {
	BaseCurrencyID int32
	CurrencyID     int32
	ExchangeRate   float64
	UpdatedAt      time.Time
}

func (q *Queries) UpsertExchangeRate(ctx context.Context, arg UpsertExchangeRateParams) error {
	_, err := q.db.Exec(ctx, upsertExchangeRate,
		arg.BaseCurrencyID,
		arg.CurrencyID,
		arg.ExchangeRate,
		arg.UpdatedAt,
	)
	return err
}
